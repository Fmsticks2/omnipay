/**
 * OmniPay Contract Addresses
 * Network: Push Donut Testnet (Chain ID: 42101)
 */

// Contract addresses for different networks
export const CONTRACT_ADDRESSES = {
  push_donut: {
    NOTIFIER: '0x7c19b04AD3375e3710e5bBF4C528909C407af46B',
    CORE: '0x19ADFCCDB66985EeD6dAA6f5A7846A3d4fd86b9D',
    SUBSCRIPTION: '0x64C4601153e9E553806f37d30f49a0295267c1Ae',
    BRIDGE_STUB: '0x4212f573e7F456974e018001B2311f4402d2711B',
    SETTLEMENT: '0x37525E8B82C776F608eCA8A49C000b98a456fBdD',
    BRIDGE: '0x634b3cD5db670b9f104D4242621c4E200c6aDb4F',
  },
  // Add other networks as needed
  ethereum: {
    NOTIFIER: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    CORE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SUBSCRIPTION: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE_STUB: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SETTLEMENT: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
  },
  base: {
    NOTIFIER: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    CORE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SUBSCRIPTION: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE_STUB: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SETTLEMENT: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
  },
  polygon: {
    NOTIFIER: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    CORE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SUBSCRIPTION: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE_STUB: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SETTLEMENT: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
  },
  arbitrum: {
    NOTIFIER: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    CORE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SUBSCRIPTION: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE_STUB: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    SETTLEMENT: '0x0000000000000000000000000000000000000000', // TODO: Deploy
    BRIDGE: '0x0000000000000000000000000000000000000000', // TODO: Deploy
  },
};

// Chain ID to network name mapping
export const CHAIN_ID_TO_NETWORK: Record<number, keyof typeof CONTRACT_ADDRESSES> = {
  42101: 'push_donut',
  1: 'ethereum',
  8453: 'base',
  137: 'polygon',
  42161: 'arbitrum',
}

/**
 * Get contract addresses for a specific chain ID
 * @param chainId The chain ID to get addresses for
 * @returns Contract addresses for the specified chain or undefined if not supported
 */
export function getContractAddresses(chainId: number) {
  const network = CHAIN_ID_TO_NETWORK[chainId]
  return network ? CONTRACT_ADDRESSES[network] : undefined
}

// Legacy export for backward compatibility
export const OMNIPAY_ADDRESSES = CONTRACT_ADDRESSES;