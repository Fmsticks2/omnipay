/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOmniPayNotifier,
  IOmniPayNotifierInterface,
} from "../../../contracts/OmniPayCore.sol/IOmniPayNotifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "paymentRef",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "notifyPaymentFailure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "paymentRef",
        type: "string",
      },
    ],
    name: "notifyPaymentSuccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOmniPayNotifier__factory {
  static readonly abi = _abi;
  static createInterface(): IOmniPayNotifierInterface {
    return new Interface(_abi) as IOmniPayNotifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOmniPayNotifier {
    return new Contract(address, _abi, runner) as unknown as IOmniPayNotifier;
  }
}
